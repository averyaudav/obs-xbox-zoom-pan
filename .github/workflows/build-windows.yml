name: Build OBS Plugin (Windows)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install CMake + Ninja
        uses: lukka/get-cmake@v3.30.3

      - name: Get latest obs-deps (win64) with retries
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $retries = 5; $delay = 5
          for ($i=1; $i -le $retries; $i++) {
            try {
              $release = Invoke-RestMethod https://api.github.com/repos/obsproject/obs-deps/releases/latest
              $asset = $release.assets | Where-Object { $_.name -like 'win64-deps-*.zip' } | Select-Object -First 1
              if (-not $asset) { throw "No win64-deps asset found" }
              Write-Host "Latest obs-deps asset:" $asset.name
              $zip = "$env:RUNNER_TEMP\obs-deps.zip"
              Invoke-WebRequest $asset.browser_download_url -OutFile $zip
              if (-not (Test-Path $zip)) { throw "Download failed: $zip missing" }
              New-Item -ItemType Directory -Force -Path C:\obs-deps | Out-Null
              Expand-Archive -Path $zip -DestinationPath C:\obs-deps -Force
              break
            } catch {
              if ($i -eq $retries) { throw }
              Write-Host "Retry $i failed: $($_.Exception.Message)"
              Start-Sleep -Seconds $delay
            }
          }
          Write-Host "obs-deps contents:"
          Get-ChildItem -Recurse C:\obs-deps | Select-Object FullName

      - name: Configure (Ninja, verbose)
        shell: pwsh
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_VERBOSE_MAKEFILE=ON
          -DCMAKE_PREFIX_PATH="C:\obs-deps;C:\obs-deps\lib\cmake"
          -Dlibobs_DIR="C:\obs-deps\lib\cmake\libobs"
          -Dobs-frontend-api_DIR="C:\obs-deps\lib\cmake\obs-frontend-api"

      - name: Build
        run: cmake --build build --config Release -j

      - name: Stage install
        run: cmake --install build --config Release --prefix "${{ github.workspace }}\stage"

      - name: Upload DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: obs-xbox-zoom-pan-windows
          path: stage/obs-plugins/64bit/obs-xbox-zoom-pan.dll

      # Always upload logs if anything goes wrong
      - name: Upload CMake logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cmake-logs
          path: |
            build/CMakeFiles/CMakeOutput.log
            build/CMakeFiles/CMakeError.log


