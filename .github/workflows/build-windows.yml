name: Build OBS Plugin (Windows)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install CMake + Ninja
        uses: lukka/get-cmake@v3.30.3

      # ----------------------------------------------------
      # 1) Download the official OBS CMake SDK (libobs + frontend API)
      # ----------------------------------------------------
      - name: Download OBS Studio SDK (windows-cmake)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'

          # Get latest OBS release metadata
          $release = Invoke-RestMethod -Uri 'https://api.github.com/repos/obsproject/obs-studio/releases/latest'
          $asset = $release.assets | Where-Object { $_.name -match 'windows-cmake\.zip$' } | Select-Object -First 1
          if (-not $asset) { throw "No windows-cmake SDK asset found in latest release." }

          Write-Host "Downloading OBS SDK asset: $($asset.name)"
          $zip = Join-Path $env:RUNNER_TEMP $asset.name
          Invoke-WebRequest $asset.browser_download_url -OutFile $zip

          # Extract to temporary location
          $sdkDir = Join-Path $env:RUNNER_TEMP 'obs-sdk'
          New-Item -Force -ItemType Directory $sdkDir | Out-Null
          Expand-Archive -Path $zip -DestinationPath $sdkDir -Force

          # The CMake configs live inside /cmake/
          $sdkCmake = Join-Path $sdkDir 'cmake'
          if (-not (Test-Path "$sdkCmake\libobs\libobsConfig.cmake")) {
            Write-Error "libobsConfig.cmake not found under $sdkCmake"
          }

          Write-Host "OBS SDK unpacked to: $sdkCmake"
          echo "OBS_SDK_CMAKE=$sdkCmake" >> $env:GITHUB_ENV

      # ----------------------------------------------------
      # 2) Configure CMake for your plugin
      # ----------------------------------------------------
      - name: Configure (CMake)
        shell: pwsh
        run: |
          cmake -S . -B build -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_VERBOSE_MAKEFILE=ON `
            -DCMAKE_PREFIX_PATH="$env:OBS_SDK_CMAKE"

      # ----------------------------------------------------
      # 3) Build
      # ----------------------------------------------------
      - name: Build
        run: cmake --build build --config Release -j

      # ----------------------------------------------------
      # 4) Stage / install
      # ----------------------------------------------------
      - name: Stage install
        run: cmake --install build --config Release --prefix "${{ github.workspace }}\stage"

      # ----------------------------------------------------
      # 5) Upload DLL artifact
      # ----------------------------------------------------
      - name: Upload plugin DLL
        uses: actions/upload-artifact@v4
        with:
          name: obs-xbox-zoom-pan-windows
          path: stage/obs-plugins/64bit/obs-xbox-zoom-pan.dll
          if-no-files-found: warn

      # ----------------------------------------------------
      # 6) Always upload logs/build folder for troubleshooting
      # ----------------------------------------------------
      - name: Upload build + logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-and-logs
          path: |
            build/**
            stage/**
          if-no-files-found: ignore

